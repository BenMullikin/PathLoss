"""init schema

Revision ID: f083fdbb6bb0
Revises: 
Create Date: 2025-11-01 03:14:28.108648

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision: str = 'f083fdbb6bb0'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute("CREATE EXTENSION IF NOT EXISTS postgis")
    op.create_table('cell_towers',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('radio', sa.String(length=16), nullable=False),
    sa.Column('mcc', sa.SmallInteger(), nullable=False),
    sa.Column('mnc', sa.SmallInteger(), nullable=False),
    sa.Column('area_code', sa.Integer(), nullable=True),
    sa.Column('cid', sa.BigInteger(), nullable=False),
    sa.Column('lat', sa.Float(), nullable=False),
    sa.Column('lon', sa.Float(), nullable=False),
    sa.Column('geom', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
    sa.Column('elevation_m', sa.Float(), nullable=True),
    sa.Column('source', sa.String(length=32), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("radio IN ('GSM','UMTS','LTE','NR')", name='ck_cell_towers_radio'),
    sa.CheckConstraint('lat BETWEEN -90 AND 90', name='ck_cell_towers_lat'),
    sa.CheckConstraint('lon BETWEEN -180 AND 180', name='ck_cell_towers_lon'),
    sa.CheckConstraint('mcc BETWEEN 1 AND 999', name='ck_cell_towers_mcc'),
    sa.CheckConstraint('mnc BETWEEN 0 AND 999', name='ck_cell_towers_mnc'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('radio', 'mcc', 'mnc', 'area_code', 'cid', name='uq_cell_tower_identity')
    )
    op.create_index('ix_cell_towers_geom', 'cell_towers', ['geom'], unique=False, postgresql_using='gist')
    op.create_index('ix_cell_towers_identity', 'cell_towers', ['radio', 'mcc', 'mnc', 'area_code', 'cid'], unique=False)
    op.create_table('measurements',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('lat', sa.Float(), nullable=False),
    sa.Column('lon', sa.Float(), nullable=False),
    sa.Column('geom', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, from_text='ST_GeomFromEWKT', name='geometry', nullable=False), nullable=False),
    sa.Column('elevation_m', sa.Float(), nullable=True),
    sa.Column('source', sa.String(length=64), nullable=False),
    sa.Column('radio', sa.String(length=16), nullable=False),
    sa.Column('mcc', sa.SmallInteger(), nullable=False),
    sa.Column('mnc', sa.SmallInteger(), nullable=False),
    sa.Column('area_code', sa.Integer(), nullable=True),
    sa.Column('tower_id', sa.BigInteger(), nullable=True),
    sa.Column('cid', sa.BigInteger(), nullable=False),
    sa.Column('rsrp', sa.Float(), nullable=True),
    sa.Column('rssi', sa.Float(), nullable=True),
    sa.Column('rsrq', sa.Float(), nullable=True),
    sa.Column('sinr', sa.Float(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("radio IN ('GSM','UMTS','LTE','NR')", name='ck_measurements_radio'),
    sa.CheckConstraint('lat BETWEEN -90 AND 90', name='ck_measurements_lat'),
    sa.CheckConstraint('lon BETWEEN -180 AND 180', name='ck_measurements_lon'),
    sa.CheckConstraint('mcc BETWEEN 1 AND 999', name='ck_measurements_mcc'),
    sa.CheckConstraint('mnc BETWEEN 0 AND 999', name='ck_measurements_mnc'),
    sa.CheckConstraint('rsrp BETWEEN -150 AND -40', name='ck_measurements_rsrp'),
    sa.CheckConstraint('rssi BETWEEN -120 AND 0', name='ck_measurements_rssi'),
    sa.CheckConstraint('sinr BETWEEN -20 AND 40', name='ck_measurements_sinr'),
    sa.ForeignKeyConstraint(['tower_id'], ['cell_towers.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_measurements_geom', 'measurements', ['geom'], unique=False, postgresql_using='gist')
    op.create_index('ix_measurements_identity', 'measurements', ['mcc', 'mnc', 'area_code', 'cid'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_measurements_identity', table_name='measurements')
    op.drop_index('ix_measurements_geom', table_name='measurements', postgresql_using='gist')
    op.drop_table('measurements')
    op.drop_index('ix_cell_towers_identity', table_name='cell_towers')
    op.drop_index('ix_cell_towers_geom', table_name='cell_towers', postgresql_using='gist')
    op.drop_table('cell_towers')
    # ### end Alembic commands ###
