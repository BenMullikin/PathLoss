"""Created Schema Hopefully

Revision ID: 7474982ec990
Revises: 
Create Date: 2025-10-30 19:58:33.231279

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import geoalchemy2


# revision identifiers, used by Alembic.
revision: str = '7474982ec990'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cell_towers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('radio', sa.String(length=16), nullable=False),
    sa.Column('mcc', sa.SmallInteger(), nullable=False),
    sa.Column('mnc', sa.SmallInteger(), nullable=False),
    sa.Column('lac', sa.Integer(), nullable=True),
    sa.Column('cid', sa.BigInteger(), nullable=False),
    sa.Column('lon', sa.Float(), nullable=False),
    sa.Column('lat', sa.Float(), nullable=False),
    sa.Column('seen_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('geom', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.CheckConstraint('lat BETWEEN -90 AND 90', name='ck_cell_towers_lat'),
    sa.CheckConstraint('lon BETWEEN -180 AND 180', name='ck_cell_towers_lon'),
    sa.PrimaryKeyConstraint('id')
    )
    # op.create_index('idx_cell_towers_geom', 'cell_towers', ['geom'], unique=False, postgresql_using='gist')
    op.create_index('ix_cell_towers_identity', 'cell_towers', ['radio', 'mcc', 'mnc', 'lac', 'cid'], unique=False)
    op.create_table('measurements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lat', sa.Float(), nullable=False),
    sa.Column('lon', sa.Float(), nullable=False),
    sa.Column('rsrp_dBm', sa.Float(), nullable=False),
    sa.Column('mcc', sa.SmallInteger(), nullable=False),
    sa.Column('mnc', sa.SmallInteger(), nullable=False),
    sa.Column('lac', sa.Integer(), nullable=True),
    sa.Column('cid', sa.BigInteger(), nullable=False),
    sa.Column('source', sa.String(length=64), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('geom', geoalchemy2.types.Geometry(geometry_type='POINT', srid=4326, from_text='ST_GeomFromEWKT', name='geometry'), nullable=True),
    sa.CheckConstraint('lat BETWEEN -90 AND 90', name='ck_measurements_lat'),
    sa.CheckConstraint('lon BETWEEN -180 AND 180', name='ck_measurements_lon'),
    sa.PrimaryKeyConstraint('id')
    )
    # op.create_index('idx_measurements_geom', 'measurements', ['geom'], unique=False, postgresql_using='gist')
    op.create_index('ix_measurements_identity', 'measurements', ['mcc', 'mnc', 'lac', 'cid', 'lat', 'lon'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_measurements_identity', table_name='measurements')
    op.drop_index('idx_measurements_geom', table_name='measurements', postgresql_using='gist')
    op.drop_table('measurements')
    op.drop_index('ix_cell_towers_identity', table_name='cell_towers')
    op.drop_index('idx_cell_towers_geom', table_name='cell_towers', postgresql_using='gist')
    op.drop_table('cell_towers')
    # ### end Alembic commands ###
